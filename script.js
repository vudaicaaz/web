// ‚öôÔ∏è Kh·ªüi t·∫°o Firebase (d√πng b·∫£n compat cho HTML thu·∫ßn)
const firebaseConfig = {
  apiKey: "AIzaSyAZ-4OBafTyAvqIdlVTBnvsmC76UjRNh_w",
  authDomain: "webb-32ae6.firebaseapp.com",
  projectId: "webb-32ae6",
  storageBucket: "webb-32ae6.firebasestorage.app",
  messagingSenderId: "986678901711",
  appId: "1:986678901711:web:4be05cf366e8df53f8b0ba",
  measurementId: "G-TWWYQVF4Y8"
};

// üëâ Kh·ªüi t·∫°o Firebase
firebase.initializeApp(firebaseConfig);
const auth = firebase.auth();

// üåê ƒê·ªãa ch·ªâ IP c·ªßa ESP32
const esp32IP = "http://192.168.1.24"; // THAY B·∫∞NG IP TH·ª∞C T·∫æ C·ª¶A ESP32
let weightInterval = null;

// üîë ƒêƒÉng nh·∫≠p
function handleLogin(event) {
  event.preventDefault();
  const email = document.getElementById("username").value.trim();
  const password = document.getElementById("password").value;

  auth.signInWithEmailAndPassword(email, password)
    .then(() => showDashboard(email))
    .catch(() => {
      document.getElementById("errorMessage").textContent = "‚ùå Sai email ho·∫∑c m·∫≠t kh·∫©u!";
    });
}

// ‚ûï ƒêƒÉng k√Ω
function handleRegister(event) {
  event.preventDefault();
  const email = document.getElementById("newUsername").value.trim();
  const password = document.getElementById("newPassword").value;

  if (!email || !password) {
    document.getElementById("registerMessage").textContent = "‚ùå Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!";
    return;
  }

  auth.createUserWithEmailAndPassword(email, password)
    .then(() => {
      document.getElementById("registerMessage").textContent = "‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng!";
      document.getElementById("newUsername").value = "";
      document.getElementById("newPassword").value = "";
      setTimeout(showLogin, 1000);
    })
    .catch((error) => {
      if (error.code === "auth/email-already-in-use") {
        document.getElementById("registerMessage").textContent = "‚ùå T√†i kho·∫£n ƒë√£ t·ªìn t·∫°i!";
      } else {
        document.getElementById("registerMessage").textContent = "‚ùå L·ªói: " + error.message;
      }
    });
}

// üß≠ Giao di·ªán
function showRegister() {
  document.getElementById("loginForm").style.display = "none";
  document.getElementById("registerForm").style.display = "block";
  document.getElementById("registerMessage").textContent = "";
}

function showLogin() {
  document.getElementById("registerForm").style.display = "none";
  document.getElementById("loginForm").style.display = "block";
  document.getElementById("errorMessage").textContent = "";
}

// üë§ Giao di·ªán ng∆∞·ªùi d√πng sau ƒëƒÉng nh·∫≠p
function showDashboard(username) {
  document.getElementById("userDisplay").textContent = username;
  document.getElementById("loginForm").style.display = "none";
  document.getElementById("registerForm").style.display = "none";
  document.getElementById("dashboard").style.display = "block";
  startFetchingWeight();
}

// üö™ ƒêƒÉng xu·∫•t
function logout() {
  auth.signOut().then(() => {
    document.getElementById("dashboard").style.display = "none";
    document.getElementById("loginForm").style.display = "block";
    document.getElementById("username").value = "";
    document.getElementById("password").value = "";
    stopFetchingWeight();
  });
}

// üì° ƒê·ªçc s·ªë c√¢n ƒë·ªãnh k·ª≥
function startFetchingWeight() {
  fetchWeight();
  weightInterval = setInterval(fetchWeight, 5000);
}

function stopFetchingWeight() {
  clearInterval(weightInterval);
}

// ‚öñÔ∏è G·ªçi API t·ª´ ESP32
async function fetchWeight() {
  try {
    const res = await fetch(`${esp32IP}/weight`);
    const data = await res.json();
    const weight = parseFloat(data.weight).toFixed(1);

    document.getElementById("weightValue").textContent = `${weight} kg`;

    let advice = "";
    if (weight < 45) advice = "üìå B·∫°n h∆°i g·∫ßy, n√™n ƒÉn u·ªëng ƒë·∫ßy ƒë·ªß.";
    else if (weight < 60) advice = "‚úÖ C√¢n n·∫∑ng l√Ω t∆∞·ªüng, duy tr√¨ nh√©!";
    else if (weight < 75) advice = "‚ö†Ô∏è H∆°i d∆∞ c√¢n. N√™n v·∫≠n ƒë·ªông nhi·ªÅu h∆°n.";
    else advice = "‚ùó C√¢n n·∫∑ng cao, h√£y ch√∫ √Ω s·ª©c kho·∫ª.";

    document.getElementById("advice").textContent = advice;
  } catch (err) {
    document.getElementById("weightValue").textContent = "-- kg";
    document.getElementById("advice").textContent = "üö´ Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c ESP32.";
    console.error("ESP32 fetch error:", err);
  }
}

// üöÄ Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p khi m·ªü trang
window.onload = () => {
  auth.onAuthStateChanged(user => {
    if (user) {
      showDashboard(user.email);
    } else {
      showLogin();
    }
  });
};
